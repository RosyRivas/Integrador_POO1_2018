/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import controlador.Controlador;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import modelo.Cliente;
import modelo.*;
import modelo.Picnic;
import org.eclipse.persistence.jpa.jpql.parser.DateTime;

/**
 *
 * @author Rosi-PC
 */
public class VentanaPicnic extends javax.swing.JFrame {

    private final Controlador controlador;
    private final JFrame previo;

    /**
     * Creates new form VentanaPicni
     *
     * @param c
     * @param p
     */
    public VentanaPicnic(Controlador c, JFrame p) {
        this.controlador = c;
        this.previo = p;
        initComponents();
        this.setResizable(false);
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        idPicnic = new javax.swing.JLabel();
        guardarPicnic = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        eliminarPic = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        comboMenu = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        lugar = new javax.swing.JTextField();
        fech = new javax.swing.JLabel();
        jFecha = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        precio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cantidadPersona = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nuevoPicnic = new javax.swing.JButton();
        hora = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPicnic = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaDeposito = new javax.swing.JList();
        QuitarDeposito = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Picnic"));

        idPicnic.setText("id");

        guardarPicnic.setText("Guardar");
        guardarPicnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPicnicActionPerformed(evt);
            }
        });

        jLabel2.setText("IdPicnic");

        eliminarPic.setText("Eliminar");
        eliminarPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jLabel10.setText("Menu");

        jLabel11.setText("Cliente");

        jLabel3.setText("Lugar");

        lugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lugarActionPerformed(evt);
            }
        });

        fech.setText("Fecha");

        jFecha.setMaxSelectableDate(new java.util.Date(2524622503000L));
        jFecha.setMinSelectableDate(new java.util.Date(946699303000L));

        jLabel6.setText("Precio");

        precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioKeyTyped(evt);
            }
        });

        jLabel7.setText("Cantidad de Personas");

        cantidadPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadPersonaActionPerformed(evt);
            }
        });
        cantidadPersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadPersonaKeyTyped(evt);
            }
        });

        jLabel4.setText("Hora");

        nuevoPicnic.setText("Nuevo");
        nuevoPicnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPicnicActionPerformed(evt);
            }
        });

        try {
            hora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaActionPerformed(evt);
            }
        });
        hora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                horaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGap(354, 354, 354)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(fech)
                                .addGap(94, 94, 94)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idPicnic)
                                    .addComponent(lugar)
                                    .addComponent(jFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(nuevoPicnic)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cantidadPersona, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(precio, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(guardarPicnic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(36, 36, 36)
                                        .addComponent(eliminarPic)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idPicnic))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lugar)))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fech)
                    .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cantidadPersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarPicnic)
                    .addComponent(eliminarPic)
                    .addComponent(nuevoPicnic))
                .addGap(217, 217, 217))
        );

        precio.getAccessibleContext().setAccessibleDescription("");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Picnic"));

        listPicnic.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPicnic.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPicnicValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listPicnic);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jButton5.setText("Volver");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Deposito"));

        listaDeposito.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDeposito.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaDepositoValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaDeposito);

        QuitarDeposito.setText("Quitar");
        QuitarDeposito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarDepositoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuitarDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(171, 171, 171))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(QuitarDeposito))
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(16, 16, 16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//limpiar picnic 
    private void limpiar() {
         Date fechita=new Date();
        
         this.jFecha.getJCalendar().setMinSelectableDate(fechita);
          this.jFecha.getMinSelectableDate().toString();
            this.jFecha.getCalendarButton().enableInputMethods(false);
        this.idPicnic.setText("");
        this.lugar.setText("");
        this.precio.setText("");
        this.hora.setText("");
        this.cantidadPersona.setText("");

        this.jFecha.setCalendar(null);

        //combo cliente
        DefaultComboBoxModel modeloCliente = new DefaultComboBoxModel(this.controlador.listarCliente().toArray());
        this.comboCliente.setModel(modeloCliente);

        //combo menu
        DefaultComboBoxModel modeloMenu = new DefaultComboBoxModel(this.controlador.listarMenu().toArray());
        this.comboMenu.setModel(modeloMenu);

        //lista picnic
        this.listPicnic.setListData(this.controlador.listarPicnic().toArray());
        this.listPicnic.clearSelection();

        //modelo lista deposito
        DefaultListModel modeloLista = new DefaultListModel();
        this.listaDeposito.setModel(modeloLista);

        this.comboMenu.setSelectedIndex(-1);

        this.comboCliente.setSelectedIndex(-1);

    }


    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        dispose();
        this.previo.setVisible(true);


    }//GEN-LAST:event_jButton5ActionPerformed

    private void listPicnicValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPicnicValueChanged

        if (!this.listPicnic.isSelectionEmpty()) {
            Picnic p = (Picnic) this.listPicnic.getSelectedValue();
            //this.idPicnic.setText(p.getIdPicnic().toString());

            this.lugar.setText(p.getLugar());
            this.precio.setText(p.getPrecio());
            this.cantidadPersona.setText(p.getCantPersona());
            this.hora.setText(p.getHora());
            
            this.jFecha.setDate(p.getFecha());
        
            if (p.getMe() != null) {
                this.comboMenu.setSelectedItem(p.getMe());
            } else {
                this.comboMenu.setSelectedItem(null);
            }
            if (p.getCli() != null) {
                this.comboCliente.setSelectedItem(p.getCli());

            } else {
                this.comboCliente.setSelectedItem(null);
            }
            
            this.listaDeposito.setListData(p.getDep().toArray());

        }


    }//GEN-LAST:event_listPicnicValueChanged
//quitar deposito
    private void QuitarDepositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarDepositoActionPerformed
        if (this.listPicnic.getSelectedValue() != null) {
            Picnic p = (Picnic) this.listPicnic.getSelectedValue();
            Deposito d = (Deposito) this.listaDeposito.getSelectedValue();
            this.controlador.quitarDepositoPicnic(p, d);
            this.listaDeposito.setListData(p.getDep().toArray());
        }
    }//GEN-LAST:event_QuitarDepositoActionPerformed

    private void cantidadPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadPersonaActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadPersonaActionPerformed

    private void lugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lugarActionPerformed
//guardar picnic
    //@SuppressWarnings("empty-statement")
    private void guardarPicnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPicnicActionPerformed
        
         SimpleDateFormat fechita= new  SimpleDateFormat("dd/MM/yyyy");
         fechita.getCalendar(); 
        Integer horita = Integer.parseInt(this.hora.getText().substring(0, 2));
        Integer minutos = Integer.parseInt(this.hora.getText().substring(3, 5));

        if ((horita <= 24) && (minutos <= 59)) {

                if (!this.listPicnic.isSelectionEmpty()) {

                    Picnic p = (Picnic) this.listPicnic.getSelectedValue();
                    this.controlador.editarPicnic(p, this.lugar.getText(), fechita.format(this.jFecha.getDate()), this.hora.getText(), this.cantidadPersona.getText(), this.precio.getText(), (Cliente) this.comboCliente.getSelectedItem(), (Menu) this.comboMenu.getSelectedItem());
                } else {
                    this.controlador.agregarPicnic(this.lugar.getText(), fechita.format(this.jFecha.getDate()), this.hora.getText(), this.cantidadPersona.getText(), this.precio.getText(), (Cliente) this.comboCliente.getSelectedItem(), (Menu) this.comboMenu.getSelectedItem());
                }
            

        } else {

            JOptionPane.showMessageDialog(null, "Fecha invalida: ingrese nuevamente la hora ", "Error", JOptionPane.ERROR_MESSAGE);

        }
        
   
        limpiar();


    }//GEN-LAST:event_guardarPicnicActionPerformed

//GEN-FIRST:event_nuevoPicActionPerformed
 
//GEN-LAST:event_nuevoPicActionPerformed

    private void nuevoPicnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPicnicActionPerformed
        limpiar();
    }//GEN-LAST:event_nuevoPicnicActionPerformed

    private void horaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaActionPerformed

    private void eliminarPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPicActionPerformed
        Picnic p = (Picnic) this.listPicnic.getSelectedValue();
        if (p != null) {
            int i = this.controlador.eliminarPicnic(p);
            if (i != 0) {
                JOptionPane.showMessageDialog(null, "No es posible eliminar el Picnic,existen elementos asociados", "Error", JOptionPane.ERROR_MESSAGE);
            }
            limpiar();
        }
    }//GEN-LAST:event_eliminarPicActionPerformed

    private void listaDepositoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaDepositoValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listaDepositoValueChanged

    private void cantidadPersonaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadPersonaKeyTyped
        char letra = evt.getKeyChar();
        if (!Character.isDigit(letra)){
                evt.consume();
               // JOptionPane.showMessageDialog(rootPane, "Ingrese cantidad de Persona");
        
        }
    }//GEN-LAST:event_cantidadPersonaKeyTyped

    private void precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyTyped
        char letra = evt.getKeyChar();
        if (!Character.isDigit(letra)){
                evt.consume();
               // JOptionPane.showMessageDialog(rootPane, "Ingrese  Precio");
        
        }
    }//GEN-LAST:event_precioKeyTyped

    private void horaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_horaKeyTyped
        char letra = evt.getKeyChar();
        if (!Character.isDigit(letra)){
                evt.consume();
                
        
        }
    }//GEN-LAST:event_horaKeyTyped

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton QuitarDeposito;
    private javax.swing.JTextField cantidadPersona;
    private javax.swing.JComboBox comboCliente;
    private javax.swing.JComboBox comboMenu;
    private javax.swing.JButton eliminarPic;
    private javax.swing.JLabel fech;
    private javax.swing.JButton guardarPicnic;
    private javax.swing.JFormattedTextField hora;
    private javax.swing.JLabel idPicnic;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jFecha;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listPicnic;
    private javax.swing.JList listaDeposito;
    private javax.swing.JTextField lugar;
    private javax.swing.JButton nuevoPicnic;
    private javax.swing.JTextField precio;
    // End of variables declaration//GEN-END:variables
}
